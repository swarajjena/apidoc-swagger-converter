{"swagger":"2.0","info":{"title":"Coursedog Rest API","version":"1.0.0","description":"This list all admin apis being used by the coursedog application"},"paths":{"/api/v1/admin/connected_apps":{"get":{"tags":["Admin"],"summary":"GET ConnectedApps","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"schema":{"properties":{"apps":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"ID of the app"},"name":{"type":"string","description":"Human-friendly name of the app"},"url":{"type":"string","description":"URL of the app"}},"required":["id","name","url"]}}},"type":"object","required":["apps"]}}}}},"/api/v1/admin/data_migrations":{"get":{"tags":["Admin"],"summary":"GET DataMigrations","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"schema":{"properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"totalCount":{"type":"number","description":"Total count of DataMigrations."}},"type":"object","required":["data","totalCount"]}}}},"post":{"tags":["Admin"],"summary":"POST DataMigrations","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","schema":{"properties":{"sourceDb":{"type":"string","description":"The source DB name (school) of the data"},"destinationDb":{"type":"string","description":"The destination DB name (school) of the data"},"destinationAppId":{"type":"string","description":"The destination app of the data migration"},"password":{"type":"string","description":"Password of a machine user in the destination app"},"collections":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"force":{"type":"boolean","description":"Indicates whether the migration should be run regardless the destructive behaviour."}},"type":"object","required":["sourceDb","destinationDb","destinationAppId","password","collections","force"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"dataMigrationProcess":{"type":"object","properties":{},"required":[]}},"type":"object","required":["dataMigrationProcess"]}}}}},"/api/v1/admin/data_migrations/{id}":{"get":{"tags":["Admin"],"summary":"GET DataMigration","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"id","description":"ID of the data migration process","required":true}],"responses":{"200":{"schema":{"properties":{"dataMigrationProcess":{"type":"object","properties":{"id":{"type":"string","description":"ID of the data migration process"},"sourceDb":{"type":"string","description":"Database/school from which copy the data"},"destinationDb":{"type":"string","description":"Database/school to which copy the data"},"destinationAppId":{"type":"string","description":"Application to which copy the data"},"collections":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"collectionStatuses":{"type":"array","items":{"type":"object","properties":{"collection":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"status":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":["collection","status"]}}},"required":["id","sourceDb","destinationDb","destinationAppId","collections","collectionStatuses"]}},"type":"object","required":["dataMigrationProcess"]}}}}},"/api/v1/{school}/buildings":{"get":{"tags":["Buildings"],"summary":"GET buildings","description":"Search buildings with filters or search Query.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"query","name":"buildingId","description":"Unique building id.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"type":"string","in":"query","name":"orderby","description":"By what field records should be sorted.","required":false},{"type":"string","in":"query","name":"searchQuery","description":"Query by which buildings should be searched.","required":false},{"type":"string","in":"query","name":"condition","description":"Can have values or/and. Required only when filters param is send","required":false},{"type":"string","in":"query","name":"filters","description":"Array with all filters that we should apply for buildings.","required":false},{"type":"string","in":"query","name":"list","description":"Array with buildings ids.","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/buildings/{buildingId}":{"get":{"tags":["Buildings"],"summary":"GET building","description":"Get organization by buildingId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"buildingId","description":"Unique building id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/ca/{school}/catalogs":{"get":{"tags":["Catalogs"],"summary":"GET Catalogs","description":"Get catalogs.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"data":{"type":"object","properties":{},"required":[]}},"type":"object","required":["data"]}}}}},"/api/v1/{school}/{product}/committees":{"get":{"tags":["Committees"],"summary":"GET Committees","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product key.","required":true},{"type":"string","in":"query","name":"skip","description":"Skip X first committees. The committees are ordered by title.","required":true,"default":"0"},{"type":"string","in":"query","name":"limit","description":"How many committees return at max","required":true,"default":"25"}],"responses":{"200":{"schema":{"properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"totalCount":{"type":"number","description":"Total count of committess matching given search criteria"}},"type":"object","required":["data","totalCount"]}}}},"post":{"tags":["Committees"],"summary":"POST Committee","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product key.","required":true},{"in":"body","schema":{"properties":{"committee":{"type":"object","properties":{"name":{"type":"string","description":"Name of the committee"},"description":{"type":"string","description":"Description of the committee"},"memberIds":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"effectiveStartDate":{"type":"string","description":"Date string in format YYYY-MM-DD"},"effectiveEndDate":{"type":"string","description":"Date string in format YYYY-MM-DD"},"status":{"type":"string","description":"Status of the committee"}},"required":["name","description","memberIds","effectiveStartDate","effectiveEndDate","status"]}},"type":"object","required":["committee"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"committee":{"type":"object","properties":{},"required":[]}},"type":"object","required":["committee"]}}}}},"/api/v1/{school}/{product}/committees/{id}":{"get":{"tags":["Committees"],"summary":"GET Committee","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product key.","required":true},{"type":"string","in":"path","name":"id","description":"Committees unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"committee":{"type":"object","properties":{"name":{"type":"string","description":"Name of the committee"},"description":{"type":"string","description":"Description of the committee"},"memberIds":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"IDs (emails) of committee member"},"config":{"type":"object","properties":{"canVote":{"type":"boolean","description":"Boolean indicating whether the committee member can vote"},"canSuspend":{"type":"boolean","description":"Boolean indicating whether the committee member can suspend proposal"},"canSendBack":{"type":"boolean","description":"Boolean indicating whether the committee member can send back proposal"},"requiredToComment":{"type":"boolean","description":"Boolean indicating whether the committee member is required to add a comment"}},"required":["canVote","canSuspend","canSendBack","requiredToComment"]}},"required":["id","config"]}},"effectiveStartDate":{"type":"string","description":"Date string in format YYYY-MM-DD"},"effectiveEndDate":{"type":"string","description":"Date string in format YYYY-MM-DD"},"status":{"type":"string","description":"Status of the committee (`active` or `inactive`)"}},"required":["name","description","memberIds","effectiveStartDate","effectiveEndDate","status"]}},"type":"object","required":["committee"]}}}},"put":{"tags":["Committees"],"summary":"PUT Committee","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product key.","required":true},{"type":"string","in":"path","name":"id","description":"Committees unique ID.","required":true},{"in":"body","schema":{"properties":{"committee":{"type":"object","properties":{},"required":[]}},"type":"object","required":["committee"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"committee":{"type":"object","properties":{},"required":[]}},"type":"object","required":["committee"]}}}},"delete":{"tags":["Committees"],"summary":"DELETE Committee","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product key.","required":true},{"type":"string","in":"path","name":"id","description":"Committees unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"Committee":{"type":"object","properties":{},"required":[]}},"type":"object","required":["Committee"]}}}}},"/api/v1/{school}/{product}/committees/search":{"get":{"tags":["Committees"],"summary":"Search Committees","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product key.","required":true},{"type":"string","in":"query","name":"query","description":"Search query against committees' name and description","required":true}],"responses":{"200":{"schema":{"properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":["data"]}}}}},"/api/v1/{school}/contracts/{contractId}":{"get":{"tags":["Contracts"],"summary":"GET Contract","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"contractId","description":"Contract unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"contract":{"type":"object","properties":{},"required":[]}},"type":"object","required":["contract"]}}}},"put":{"tags":["Contracts"],"summary":"PUT Contract","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"contractId","description":"Contract unique ID.","required":true},{"in":"body","schema":{"properties":{"contract":{"type":"object","properties":{"content":{"type":"string","description":"Contract HTML content"}},"required":["content"]}},"type":"object","required":["contract"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"contract":{"type":"object","properties":{},"required":[]}},"type":"object","required":["contract"]}}}},"delete":{"tags":["Contracts"],"summary":"DELETE Contract","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"contractId","description":"Contract unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"contract":{"type":"object","properties":{},"required":[]}},"type":"object","required":["contract"]}}}}},"/api/v1/{school}/crosslists":{"get":{"tags":["Crosslists"],"summary":"Search for crosslists and courses combined","description":"[[Placeholder for crosslist api description]]","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"searchQuery","description":"Text search query","required":false},{"type":"string","in":"query","name":"returnFields","description":"Array of fields to return. Comma separated list.","required":false},{"type":"string","in":"query","name":"entities","description":"List of coursesGroupIds to be returned. Comma separated list.","required":false},{"type":"string","in":"query","name":"effectiveStartDate","description":"Effective Start Date","required":false}],"responses":{"200":{"schema":{"$schema":"http://json-schema.org/draft-04/schema#","title":"SJBABA","type":"object","properties":{"courses":{"type":"array","items":{"type":"object","properties":{"courseId":{"type":"string"},"effectiveStartDate":{"type":"string"},"entityId":{"type":"string"},"name":{"type":"string"},"requestStatus":{"type":"string"},"type":{"type":"string"}}}},"crosslists":{"type":"array","items":{"type":"array","items":{"type":"object","properties":{"courseId":{"type":"string"},"effectiveStartDate":{"type":"string"},"entityId":{"type":"string"},"name":{"type":"string"},"requestStatus":{"type":"string"},"type":{"type":"string"}},"title":"crosslists"}}}}},"description":"SJBABA"}}},"post":{"tags":["Crosslists"],"summary":"Create connection between entities","description":"[[Placeholder for create crosslist api description]]","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"in":"body","schema":{"properties":{"entities":{"type":"array","items":{"type":"object","properties":{"entityId":{"type":"string","description":"Id of entity."},"type":{"type":"string","description":"Type."},"effectiveStartDate":{"type":"string","description":"Effective Start Date."}},"required":["entityId","type"]}}},"type":"object","required":["entities"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/crosslists/{entityId}/{effectiveStartDate}":{"get":{"tags":["Crosslists"],"summary":"GET Crosslist for given entity id","description":"[[Placeholder for get crosslists by entitu id]]","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"entityId","description":"EnitiyId to seek in crosslists.","required":true},{"type":"string","in":"path","name":"effectiveStartDate","description":"Effective Start Date.","required":true}],"responses":{"200":{"schema":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Success-Response","type":"object","properties":{"id":{"type":"string"},"lastEditedAt":{"type":"number"},"lastEditedBy":{"type":"string"},"createdAt":{"type":"number"},"createdBy":{"type":"string"},"entities":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"requestStatus":{"type":"string"},"courseId":{"type":"string"},"courseGroupId":{"type":"string"},"entityId":{"type":"string"},"type":{"type":"string"},"effectiveStartDate":{"type":"string"}}}}}},"description":"Success-Response"}}},"delete":{"tags":["Crosslists"],"summary":"Removes entity from crosslist","description":"[[Placeholder for delete crosslists by entitu id]]","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"entityId","description":"Entity unique ID.","required":true},{"type":"string","in":"path","name":"effectiveStartDate","description":"Effective Start Date.","required":true}],"responses":{"200":{"schema":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Success-Response:","type":"object","properties":{"0":{"type":"object","properties":{"_id":{"type":"string"},"entities":{"type":"array","items":{"type":"object","properties":{"entityId":{"type":"string"},"type":{"type":"string"},"effectiveStartDate":{"type":"string"}},"required":["entityId","type","effectiveStartDate"]}},"lastEditedBy":{"type":"string"},"createdBy":{"type":"string"},"createdAt":{"type":"number"},"lastEditedAt":{"type":"number"}}}}},"description":"Success-Response:"}}}},"/api/v1/{school}/crosslists/{entityId}/{effectiveStartDate}/history":{"get":{"tags":["Crosslists"],"summary":"get Crosslist history by entityId","description":"[[Placeholder for  crosslists history by entitu id]]","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"entityId","description":"Entity ID to search for","required":true},{"type":"string","in":"path","name":"effectiveStartDate","description":"Effective Start Date.","required":true},{"type":"string","in":"query","name":"limit","description":"Limit","required":false},{"type":"string","in":"query","name":"skip","description":"Skip","required":false}],"responses":{"200":{"schema":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Success-Response Set","type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"author":{"type":"string"},"version":{"type":"number"},"timestamp":{"type":"number"},"diff":{"type":"object","properties":{"change":{"type":"string"},"prop":{"type":"string"},"oldVal":{"type":"null"},"newVal":{"type":"string"}}}},"title":"Success-Response"}},"description":"Success-Response"}}}},"/api/v1/{school}/cm/courses/group/{courseGroupId}":{"get":{"tags":["Curriculum/Courses"],"summary":"GET Group of Courses","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"courseGroupId","description":"Course group ID","required":true}],"responses":{"200":{"schema":{"properties":{"Courses":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":["Courses"]}}}}},"/api/v1/{school}/cm/programs/group/{programGroupId}":{"get":{"tags":["Curriculum/Programs"],"summary":"GET Group of Programs","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"programGroupId","description":"Program group ID","required":true}],"responses":{"200":{"schema":{"properties":{"Programs":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":["Programs"]}}}}},"/api/v1/{school}/departments":{"get":{"tags":["Departments"],"summary":"GET departments","description":"Search departments with search Query.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"query","name":"department","description":"Unique department id.","required":false},{"type":"string","in":"query","name":"searchQuery","description":"Query by which departments should be searched.","required":false},{"type":"string","in":"query","name":"computed","description":"If set to true we will return count results for courses/sections/instructors and conflicts","required":false},{"type":"string","in":"query","name":"year","description":"Year for which we should count courses and sections","required":false},{"type":"string","in":"query","name":"semester","description":"Semester for which we should count courses and sections","required":false},{"type":"string","in":"query","name":"list","description":"Array with departments ids.","required":false},{"type":"string","in":"query","name":"includeUsers","description":"If set to true endpoint return department scheduler users who are associated with this department","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/departments/{department}":{"get":{"tags":["Departments"],"summary":"GET Department by ID","description":"Get Department by ID.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"departmentId","description":"Department unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/dictionaries/{dictionaryName}":{"get":{"tags":["Dictionaries"],"summary":"GET Dictionary","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"dictionaryName","description":"Name of dictionary.\n.","required":true}],"responses":{"200":{"schema":{"properties":{"data":{"type":"object","properties":{},"required":[]}},"type":"object","required":["data"]}}}}},"/api/v1/{school}/formsv2":{"get":{"tags":["FormsV2"],"summary":"GET Forms v2","description":"Get Forms v2. Supports pagination.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"skip","description":"Skip X first formsv2.","required":true,"default":"0"},{"type":"string","in":"query","name":"limit","description":"How many formsv2 return at max.","required":true},{"type":"string","in":"query","name":"orderBy","description":"By which key should formsv2 be sorted.","required":true,"default":"formType"},{"type":"string","in":"query","name":"sortType","description":"Direction of sort (-1 is descending)","required":true,"default":"-1"},{"type":"string","in":"query","name":"formType","description":"Value of `formType` key.","required":true},{"type":"string","in":"query","name":"list","description":"List of `_id` values.","required":true},{"type":"string","in":"query","name":"createdBy","description":"User email.","required":true},{"type":"string","in":"query","name":"category","description":"Value of `category` key.","required":true},{"type":"string","in":"query","name":"departments","description":"List of departments.","required":true},{"type":"string","in":"query","name":"returnFields","description":"List of projected fields.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}},"post":{"tags":["FormsV2"],"summary":"POST Form v2","description":"Create new Form v2.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/formsv2/{formId}":{"get":{"tags":["FormsV2"],"summary":"GET Form v2 by ID","description":"Get Form v2 by its ID.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"formId","description":"Formv2 unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/formsv2/{formId}/responses/{formResponseId}":{"get":{"tags":["Forms_V2_/_Responses"],"summary":"GET Form Response V2","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"formId","description":"Form unique ID.","required":true},{"type":"string","in":"path","name":"formResponseId","description":"Form response unique ID.","required":true},{"type":"string","in":"query","name":"includeRelatedData","description":"Indicate whether return related data (courses, users, departments, programs)","required":true,"default":"false"}],"responses":{"200":{"schema":{"properties":{"Form":{"type":"object","properties":{},"required":[]}},"type":"object","required":["Form"]}}}}},"/api/v1/{school}/general/courseTemplate":{"get":{"tags":["General"],"summary":"Get Course Template","description":"Get courseTemplate either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/courseTemplate/questions":{"get":{"tags":["General"],"summary":"Get Course Template Questions","description":"Get courseTemplate.questions either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/eventsRoomTemplate":{"get":{"tags":["General"],"summary":"Get Events Room Template","description":"Get eventsRoomTemplate either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/eventTemplate":{"get":{"tags":["General"],"summary":"Get Event Template","description":"Get eventTemplate either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/fieldOptions":{"get":{"tags":["General"],"summary":"GET Field Options","description":"Get fieldOptions either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/integrationSchedule":{"get":{"tags":["General"],"summary":"GET integrationSchedule","description":"Get integration schedule either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Which school db to query.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/programTemplate":{"get":{"tags":["General"],"summary":"Get Program Template","description":"Get programTemplate either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/programTemplate/questions":{"get":{"tags":["General"],"summary":"Get Program Template Questions","description":"Get programTemplate.questions either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/roomTemplate":{"get":{"tags":["General"],"summary":"Get Room Template","description":"Get roomTemplate either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/schoolSettings":{"get":{"tags":["General"],"summary":"GET School Settings","description":"Get fieldOptions either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/sectionTemplate":{"get":{"tags":["General"],"summary":"GET Section Template","description":"Get sectionTemplate either from db or (if non existing) from default values.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/sm/{school}/instructorLoadRequirements":{"get":{"tags":["InstructorLoadRequirements"],"summary":"GET InstructorLoadRequirements","description":"Get Instructor Load Requirements.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"data":{"type":"object","properties":{},"required":[]}},"type":"object","required":["data"]}}}}},"/api/v1/{school}/instructors/{instructorId}/forms":{"get":{"tags":["Instructors"],"summary":"GET forms assigned to an instructor","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/professors":{"get":{"tags":["Instructors"],"summary":"GET Instructors","description":"Get instructors. Supports pagination, search and filters.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school ID.","required":true},{"type":"string","in":"query","name":"professorId","description":"Unique instructor ID.","required":false},{"type":"string","in":"query","name":"includeRelatedData","description":"If set to true courses and rooms will be attached.","required":false},{"type":"string","in":"query","name":"computed","description":"If set to true pairings will be attached.","required":false},{"type":"string","in":"query","name":"year","description":"Year for which instructors' courses should be found.","required":false},{"type":"string","in":"query","name":"semester","description":"Semester for which instructors' courses should be found.","required":false},{"type":"string","in":"query","name":"condition","description":"Required only when filters param is send.","required":false},{"type":"string","in":"query","name":"filters","description":"Array with all filters that we should apply for instructors.","required":false},{"type":"string","in":"query","name":"algorithmRunId","description":"Changes default join collection.","required":false},{"type":"string","in":"query","name":"excludeInactive","description":"If set to true only active instructors will be returned.","required":false},{"type":"string","in":"query","name":"searchQuery","description":"Search query for which instructors should be searched.","required":false},{"type":"string","in":"query","name":"departments","description":"Departments that instructors should belong to.","required":false},{"type":"string","in":"query","name":"list","description":"Instructors IDs.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"type":"string","in":"query","name":"orderby","description":"By which field records should be sorted.","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/integration/mergeSettings/saveStates":{"get":{"tags":["Integration_Save_States"],"summary":"GET Integration Save States","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"Collection":{"type":"object","properties":{},"required":[]}},"type":"object","required":["Collection"]}}}}},"/api/v1/{school}/rooms/mass-blackouts":{"get":{"tags":["Mass_Room_Blackouts"],"summary":"GET Mass Room Blackouts","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"data":{"items":{"type":"massroomblackout","description":"Array of mass room blackouts."},"type":"array"},"totalCount":{"type":"number","description":"Total count"}},"type":"object","required":["data","totalCount"]}}}},"post":{"tags":["Mass_Room_Blackouts"],"summary":"POST Mass room blackout","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"in":"body","schema":{"properties":{"MassRoomBlackout":{"type":"object","properties":{},"required":[]}},"type":"object","required":["MassRoomBlackout"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"MassRoomBlackout":{"type":"object","properties":{},"required":[]}},"type":"object","required":["MassRoomBlackout"]}}}}},"/api/v1/{school}/rooms/mass-blackouts/{id}":{"get":{"tags":["Mass_Room_Blackouts"],"summary":"GET Mass Room Blackout","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"roomMassBlackoutId","description":"MassRoomBlackout unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"MassRoomBlackout":{"type":"object","properties":{},"required":[]}},"type":"object","required":["MassRoomBlackout"]}}}},"put":{"tags":["Mass_Room_Blackouts"],"summary":"PUT Mass room blackout","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"roomMassBlackoutId","description":"MassRoomBlackout unique ID.","required":true},{"in":"body","schema":{"properties":{"MassRoomBlackout":{"type":"object","properties":{},"required":[]}},"type":"object","required":["MassRoomBlackout"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"MassRoomBlackout":{"type":"object","properties":{},"required":[]}},"type":"object","required":["MassRoomBlackout"]}}}},"delete":{"tags":["Mass_Room_Blackouts"],"summary":"DELETE Mass Room Blackout","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"roomMassBlackoutId","description":"MassRoomBlackout unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"MassRoomBlackout":{"type":"object","properties":{},"required":[]}},"type":"object","required":["MassRoomBlackout"]}}}}},"/api/v1/{school}/rooms/{roomId}/mass-blackouts":{"get":{"tags":["Mass_Room_Blackouts"],"summary":"GET Mass Room Blackouts for room","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"roomid","description":"Room unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"data":{"items":{"type":"massroomblackout","description":"Array of mass room blackouts."},"type":"array"},"totalCount":{"type":"number","description":"Total count"}},"type":"object","required":["data","totalCount"]}}}}},"/api/v1/{school}/integration/mergeSettings":{"get":{"tags":["Merge_Settings"],"summary":"GET Merge Settings","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"applyDefaults","description":"Return default merge settings if none are found for school with provided filters. Defaults to true.","required":true}],"responses":{"200":{"schema":{"properties":{"mergeSettings":{"type":"object","properties":{},"required":[]}},"type":"object","required":["mergeSettings"]}}}},"put":{"tags":["Merge_Settings"],"summary":"PUT Merge Settings","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"mergeSettings","description":"The Merge Settings to update","required":true},{"type":"string","in":"query","name":"integrationSaveStateId","description":"The Integration Save State these merge settings belong to.","required":true}],"responses":{"200":{"schema":{"properties":{"mergeSettings":{"type":"object","properties":{},"required":[]}},"type":"object","required":["mergeSettings"]}}}}},"/api/v1/{school}/notifications_settings/{product}":{"get":{"tags":["Notifications_Settings"],"summary":"GET Notifications Settings","description":"Fetch all notifications settings for given product","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product's shortcode.","required":true}],"responses":{"200":{"schema":{"properties":{"totalCount":{"type":"number","description":"Count of the available settings"},"notificationsSettings":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"notificationSettings":{"type":"object","properties":{"type":{"type":"string","description":"Type of the notification"},"product":{"type":"string","description":"Related product"},"customized":{"type":"boolean","description":"Indicates whether the settings are customized by the user"},"config":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of the config"},"subject":{"type":"string","description":"Subject of the notification"},"template":{"type":"string","description":"Template of the notification"},"recipientType":{"type":"string","description":"Indicates to whom the notification is directed."}},"required":["type","subject","template","recipientType"]}}},"required":["type","product","customized","config"]}},"type":"object","required":["totalCount","notificationsSettings","notificationSettings"]}}}}},"/api/v1/{school}/notifications_settings/{product}/{type}":{"get":{"tags":["Notifications_Settings"],"summary":"GET Notification Settings","description":"Fetch notification settings for given type and product","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product's shortcode.","required":true},{"type":"string","in":"path","name":"type","description":"Notification type.","required":true}],"responses":{"200":{"schema":{"properties":{"notificationSettings":{"type":"object","properties":{"type":{"type":"string","description":"Type of the notification"},"product":{"type":"string","description":"Related product"},"customized":{"type":"boolean","description":"Indicates whether the settings are customized by the user"},"config":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of the config"},"subject":{"type":"string","description":"Subject of the notification"},"template":{"type":"string","description":"Template of the notification"},"recipientType":{"type":"string","description":"Indicates to whom the notification is directed."}},"required":["type","subject","template","recipientType"]}}},"required":["type","product","customized","config"]}},"type":"object","required":["notificationSettings"]}}}},"put":{"tags":["Notifications_Settings"],"summary":"PUT Notification Settings","description":"Update notification settings for given type and product","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product's shortcode.","required":true},{"type":"string","in":"path","name":"type","description":"Notification type.","required":true},{"in":"body","schema":{"properties":{"config":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of the config"},"subject":{"type":"string","description":"Subject of the notification"},"template":{"type":"string","description":"Template of the notification"},"recipientType":{"type":"string","description":"Indicates to whom the notification is directed."}},"required":["type","subject","template","recipientType"]}}},"type":"object","required":["config"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"notificationSettings":{"type":"object","properties":{"type":{"type":"string","description":"Type of the notification"},"product":{"type":"string","description":"Related product"},"customized":{"type":"boolean","description":"Indicates whether the settings are customized by the user"},"config":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of the config"},"subject":{"type":"string","description":"Subject of the notification"},"template":{"type":"string","description":"Template of the notification"},"recipientType":{"type":"string","description":"Indicates to whom the notification is directed."}},"required":["type","subject","template","recipientType"]}}},"required":["type","product","customized","config"]}},"type":"object","required":["notificationSettings"]}}}},"delete":{"tags":["Notifications_Settings"],"summary":"DELETE Notification Settings","description":"Restore default notification settings for given type and product","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"product","description":"Related product's shortcode.","required":true},{"type":"string","in":"path","name":"type","description":"Notification type.","required":true}],"responses":{"200":{"schema":{"properties":{"notificationSettings":{"type":"object","properties":{"type":{"type":"string","description":"Type of the notification"},"product":{"type":"string","description":"Related product"},"customized":{"type":"boolean","description":"Indicates whether the settings are customized by the user"},"config":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"Type of the config"},"subject":{"type":"string","description":"Subject of the notification"},"template":{"type":"string","description":"Template of the notification"},"recipientType":{"type":"string","description":"Indicates to whom the notification is directed."}},"required":["type","subject","template","recipientType"]}}},"required":["type","product","customized","config"]}},"type":"object","required":["notificationSettings"]}}}}},"/api/v1/{school}/organizations":{"get":{"tags":["Organizations"],"summary":"GET","description":"Search organizations with filters","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"query","name":"organizationId","description":"Unique organization id.","required":false},{"type":"string","in":"query","name":"type","description":"Organization type.","required":false},{"type":"string","in":"query","name":"includeEvents","description":"If set to true organizations' events will be returned.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"type":"string","in":"query","name":"orderby","description":"By what field records should be sorted.","required":false},{"type":"string","in":"query","name":"searchQuery","description":"Query by which organizations should be searched.","required":false},{"type":"string","in":"query","name":"condition","description":"Can have values or/and. Required only when filters param is send","required":false},{"type":"string","in":"query","name":"filters","description":"Array with all filters that we should apply for organizations.","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/organizations/{organizationId}":{"get":{"tags":["Organizations"],"summary":"GET organization","description":"Get organization by organizationId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"organizationId","description":"Unique organization id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/phases":{"get":{"tags":["Phases"],"summary":"GET Phases","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"phase":{"type":"object","properties":{},"required":[]}},"type":"object","required":["phase"]}}}},"post":{"tags":["Phases"],"summary":"POST Phase","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"in":"body","schema":{"properties":{"phase":{"type":"object","properties":{"name":{"type":"string","description":"Phase name"},"rolePermissions":{"type":"object","properties":{},"required":[]},"fieldPermissions":{"type":"array","description":"Field permissions"},"integrationSaveStateId":{"type":"string","description":"Merge Settings Save State"}},"required":["name","rolePermissions","fieldPermissions","integrationSaveStateId"]}},"type":"object","required":["phase"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"phase":{"type":"object","properties":{},"required":[]}},"type":"object","required":["phase"]}}}}},"/api/v1/{school}/phases/{phaseId}":{"get":{"tags":["Phases"],"summary":"GET Phase","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"phaseId","description":"Phase unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"phase":{"type":"object","properties":{},"required":[]}},"type":"object","required":["phase"]}}}},"put":{"tags":["Phases"],"summary":"PUT Phase","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"phaseId","description":"Phase unique ID.","required":true},{"in":"body","schema":{"properties":{"phase":{"type":"object","properties":{"name":{"type":"string","description":"Phase name"},"description":{"type":"string","description":"Phase description"},"rolePermissions":{"type":"object","properties":{},"required":[]},"fieldPermissions":{"type":"array","description":"Field permissions"},"integrationSaveStateId":{"type":"string","description":"Merge Settings Save State"}},"required":["name","description","rolePermissions","fieldPermissions","integrationSaveStateId"]}},"type":"object","required":["phase"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"phase":{"type":"object","properties":{},"required":[]}},"type":"object","required":["phase"]}}}},"delete":{"tags":["Phases"],"summary":"DELETE Phase","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"phaseId","description":"Phase unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"phase":{"type":"object","properties":{},"required":[]}},"type":"object","required":["phase"]}}}}},"/api/v1/{school}/professors/{professorId}":{"get":{"tags":["Professors"],"summary":"GET professor","description":"Get professor by professorId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"professorId","description":"Unique professor id.","required":true},{"type":"string","in":"query","name":"includeRelatedData","description":"If set to true courses and rooms will be attached.","required":false},{"type":"string","in":"query","name":"computed","description":"If set to true pairings will be attached.","required":false},{"type":"string","in":"query","name":"year","description":"Year for which professors' courses should be found.","required":false},{"type":"string","in":"query","name":"semester","description":"Semester for which professors' courses should be found.","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/relationships/{year}/{semester}":{"get":{"tags":["Relationships"],"summary":"Get relationships","description":"Get relationships","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School","required":true},{"type":"string","in":"path","name":"year","description":"Year","required":true},{"type":"string","in":"path","name":"semester","description":"Semester","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}},"post":{"tags":["Relationships"],"summary":"Create relationship","description":"Create relationship","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School","required":true},{"type":"string","in":"path","name":"year","description":"Year","required":true},{"type":"string","in":"path","name":"semester","description":"Semester","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}},"put":{"tags":["Relationships"],"summary":"Upserts relationships","description":"Upserts relationships","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School","required":true},{"type":"string","in":"path","name":"year","description":"Year","required":true},{"type":"string","in":"path","name":"semester","description":"Semester","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/pdf-reports/catalogs/{catalogId}":{"get":{"tags":["Reports"],"summary":"GET","description":"Get most recent catalog with status succeed. With optional params - can return anything.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"catalogId","description":"Unique catalog id.","required":true},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"type":"string","in":"query","name":"orderBy","description":"By what field records schould be sorted.","required":false},{"type":"string","in":"query","name":"orderType","description":"Sort type: -1 for descending, 1 for ascending","required":false},{"type":"string","in":"query","name":"type","description":"Report type by default catalog","required":false},{"type":"string","in":"query","name":"status","description":"Report status by default 'succeed'","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/users/{userId}/requests/summary":{"get":{"tags":["Requests"],"summary":"GET User Requests Summary","description":"Get summary of given user's requests.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"userId","description":"User email.","required":true},{"type":"string","in":"query","name":"relation","description":"","required":true}],"responses":{"200":{"schema":{"properties":{"results":{"type":"object","properties":{"toApprove":{"type":"number","description":""},"assigned":{"type":"number","description":""},"author":{"type":"number","description":""},"all":{"type":"number","description":""},"archived":{"type":"number","description":""}},"required":["toApprove","assigned","author","all","archived"]}},"type":"object","required":["results"]}}}}},"/api/v1/em/{school}/resources/{resourceI}":{"get":{"tags":["Resources"],"summary":"GET resource","description":"Get resource by resourceId","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"resourceId","description":"Unique resource id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/em/{school}/resources-search":{"get":{"tags":["Resources"],"summary":"GET","description":"Search resources with filters","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"query","name":"resourceId","description":"Unique resource id.","required":false},{"type":"string","in":"query","name":"category","description":"Resource category.","required":false},{"type":"string","in":"query","name":"computed","description":"If true - resource meetings also will be returned.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"type":"string","in":"query","name":"orderby","description":"By what field records should be sorted.","required":false},{"type":"string","in":"query","name":"searchQuery","description":"Query by which resources should be searched.","required":false},{"type":"string","in":"query","name":"list","description":"Array with resources ids","required":false},{"type":"string","in":"query","name":"condition","description":"Can have values or/and. Required only when filters param is send","required":false},{"type":"string","in":"query","name":"filters","description":"Array with all filters that we should apply for resources.","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/rollovers":{"get":{"tags":["Rollovers"],"summary":"GET Rollovers","description":"Get paginated rollovers.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"skip","description":"Skip X first rollovers. The rollovers are ordered by descending `createdAt`.","required":true,"default":"0"},{"type":"string","in":"query","name":"limit","description":"How many rollovers return at max.","required":true,"default":"25"}],"responses":{"200":{"schema":{"properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"totalCount":{"type":"number","description":"Total count of rollovers matching given search criteria."}},"type":"object","required":["data","totalCount"]}}}},"post":{"tags":["Rollovers"],"summary":"POST Rollover","description":"Create new rollover.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"in":"body","schema":{"properties":{"rollover":{"type":"object","properties":{"fromSemester":{"type":"number","description":"Term's semester, which we rollover from."},"fromYear":{"type":"string","description":"Term's year, which we rollover from."},"toYear":{"type":"string","description":"Term's year, which we rollover to."},"toSemester":{"type":"number","description":"Term's semester, which we rollover to."},"type":{"type":"string","description":""}},"required":["fromSemester","fromYear","toYear","toSemester","type"]}},"type":"object","required":["rollover"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/rollovers/{rolloverId}":{"get":{"tags":["Rollovers"],"summary":"GET Rollover by ID","description":"Get rollover by ID.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"rolloverId","description":"Rollover unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"rollover":{"type":"object","properties":{"id":{"type":"string","description":"Rollover unique ID."},"fromSemester":{"type":"number","description":"Term's semester, which we rollover from."},"fromYear":{"type":"string","description":"Term's year, which we rollover from."},"toYear":{"type":"string","description":"Term's year, which we rollover to."},"toSemester":{"type":"number","description":"Term's semester, which we rollover to."},"createdBy":{"type":"string","description":"Email of User which created rollover."},"type":{"type":"string","description":""}},"required":["id","fromSemester","fromYear","toYear","toSemester","createdBy","type"]}},"type":"object","required":["rollover"]}}}},"put":{"tags":["Rollovers"],"summary":"PUT Rollover by ID","description":"Update rollover by ID.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"rolloverId","description":"Rollover unique ID.","required":true},{"in":"body","schema":{"properties":{"rollover":{"type":"object","properties":{"fromSemester":{"type":"number","description":"Term's semester, which we rollover from."},"fromYear":{"type":"string","description":"Term's year, which we rollover from."},"toYear":{"type":"string","description":"Term's year, which we rollover to."},"toSemester":{"type":"number","description":"Term's semester, which we rollover to."}},"required":["fromSemester","fromYear","toYear","toSemester"]}},"type":"object","required":["rollover"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"rollover":{"type":"object","properties":{},"required":[]}},"type":"object","required":["rollover"]}}}},"delete":{"tags":["Rollovers"],"summary":"DELETE Rollover by ID","description":"Delete rollover by ID.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"rolloverId","description":"Rollover unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/{product}/schemaMigrations":{"get":{"tags":["Schema_migrations"],"summary":"GET Schema mMigrations","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"skip","description":"Skip X first schema migrations. The schema migrations are ordered by title.","required":true,"default":"0"},{"type":"string","in":"query","name":"limit","description":"How many schema migrations return at max","required":true,"default":"25"}],"responses":{"200":{"schema":{"properties":{"data":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"totalCount":{"type":"number","description":"Total count of schema migrations matching given search criteria"}},"type":"object","required":["data","totalCount"]}}}}},"/api/v1/{school}/contracts":{"post":{"tags":["Contracts"],"summary":"POST Contract","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"in":"body","schema":{"properties":{"contract":{"type":"object","properties":{"content":{"type":"string","description":"Contract HTML content"}},"required":["content"]}},"type":"object","required":["contract"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"contract":{"type":"object","properties":{},"required":[]}},"type":"object","required":["contract"]}}}}},"/api/v1/{school}/dictionaries":{},"/api/v1/em/{school}/events/{eventId}/contract":{"post":{"tags":["Events"],"summary":"GENERATE Contract PDF","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"eventId","description":"Event unique ID.","required":true},{"type":"string","in":"query","name":"preview","description":"If true, HTML will be returned instead of PDF","required":true},{"in":"body","schema":{"properties":{"contract":{"type":"object","properties":{"content":{"type":"string","description":"Contract HTML content"}},"required":["content"]}},"type":"object","required":["contract"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"PDF":{"type":"text","description":"if preview is false, HTML otherwise"}},"type":"object","required":["PDF"]}}}}},"/api/v1/{school}/formsv2-search":{"post":{"tags":["FormsV2"],"summary":"POST Forms v2 search","description":"Get Forms v2. Supports filters and pagination.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"skip","description":"Skip X first formsv2.","required":true,"default":"0"},{"type":"string","in":"query","name":"limit","description":"How many formsv2 return at max.","required":true},{"type":"string","in":"query","name":"orderBy","description":"By which key should formsv2 be sorted.","required":true,"default":"formType"},{"type":"string","in":"query","name":"formType","description":"Value of `formType` key.","required":true},{"type":"string","in":"query","name":"list","description":"List of `_id` values.","required":true},{"type":"string","in":"query","name":"createdBy","description":"User email.","required":true},{"type":"string","in":"query","name":"category","description":"Value of `category` key.","required":true},{"type":"string","in":"query","name":"departments","description":"List of departments.","required":true},{"type":"string","in":"query","name":"returnFields","description":"List of projected fields.","required":true},{"in":"body","schema":{"properties":{"condition":{"type":"string","description":"Required only when filters param is sent."},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/instructorLoadRequirements":{},"/api/v1/{school}/integration/merge":{"post":{"tags":["Integration"],"summary":"POST Perform Integration","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"query","name":"type","description":"Integration merge type to perform","required":true},{"type":"string","in":"query","name":"year","description":"Year to perform integration for, if applicable","required":true},{"type":"string","in":"query","name":"semester","description":"Semester to perform integration for, if applicable","required":true},{"type":"string","in":"query","name":"termCode","description":"TermCode to perform integration for, if applicable","required":true},{"type":"string","in":"query","name":"mergeSettingOverrides","description":"Overrides to apply to merge settings","required":true},{"type":"string","in":"query","name":"scheduleType","description":"Integration Schedule Type","required":true}],"responses":{"200":{"schema":{"properties":{"mergeSettings":{"type":"object","properties":{},"required":[]}},"type":"object","required":["mergeSettings"]}}}}},"/api/v1/{school}/integrationData/{type}":{"post":{"tags":["Integration"],"summary":"Returns integration data from the SIS","description":"Returns integration from the SIS, in both raw data received from SIS and in Coursedog data format, serialized to JSON","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id","required":true},{"type":"string","in":"path","name":"type","description":"The type of integration data to fetch","required":true},{"type":"string","in":"query","name":"termCode","description":"The term identifier if a type is scoped to a term (e.g. sections)","required":false},{"type":"string","in":"query","name":"objectId","description":"Entity identifier. If included, will only return data matching the ID.","required":false},{"type":"string","in":"query","name":"singlePage","description":"If true, returns only the first page of results. Useful for debugging when there is lots of data to be returned.","required":false}],"responses":{"200":{"schema":{"$schema":"http://json-schema.org/draft-04/schema#","title":"Success-Response:","type":"object","properties":{}},"description":"Success-Response:"}}}},"/api/v1/em/{school}/meetingsCalendar/{calendarType}/search/{searchQuery}":{"post":{"tags":["Meetings_Calendar"],"summary":"POST","description":"Get calendar meetings for given range, with given resources searched and/or filtered.\nWe use POST here, because want to pass complex filters with req.body.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"calendarType","description":"\nEither a resource view name or calendar's view type.","required":true},{"type":"string","in":"path","name":"searchQuery","description":"Use \"$filters\" to ignore searching.","required":true},{"type":"string","in":"query","name":"includeAcademicMeetings","description":"Do not filter out meetings where `type=Academic`.","required":false},{"type":"string","in":"query","name":"startDate","description":"Start date of range for meetings.","required":false},{"type":"string","in":"query","name":"endDate","description":"End date of range for meetings.","required":false},{"in":"body","schema":{"properties":{"condition":{"type":"string","description":"Required only when filters param is sent."},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"events":{"type":"array","items":{"type":"object","properties":{},"required":[]}},"range":{"type":"object","properties":{},"required":[]},":resources":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":["events","range",":resources"]}}}}},"/api/v1/{school}/rollovers/{rolloverId}/execute":{"post":{"tags":["Rollovers"],"summary":"POST Execute Rollover","description":"Execute rollover.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"rolloverId","description":"Rollover unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/rooms-search":{"post":{"tags":["Rooms"],"summary":"POST","description":"Search rooms with filters.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"in":"body","schema":{"properties":{"skip":{"type":"number","description":"Number of records that should be skipped."},"limit":{"type":"number","description":"Number of records that should be returned."},"sortBy":{"type":"string","description":"By what field records schould be sorted."},"searchQuery":{"type":"string","description":"Query byu which rooms should be searched."},"returnFields":{"items":{"type":"string","description":"Fields that should be returned for every room. By default it returns base room's fields."},"type":"array"},"condition":{"type":"string","description":"Can have values or/and. Required only when filters param is send"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/algorithmRuns":{"post":{"tags":["Section_Optimizer"],"summary":"POST section optimizer run","description":"Create a new section optimizer run object.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"algorithmRunId","description":"Unique algorithm run id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/ca/{school}/sections/{termId}":{"post":{"tags":["Sections"],"summary":"PostApiV1CaSchoolSectionsTermid","description":"Get Sections of a specific course to display in public catalog\nUsed for `/courses/_id` in coursedog-catalog repo","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"termId","description":"Unique term Id","required":true},{"type":"string","in":"path","name":"courseId","description":"Unique courseId to filter section data","required":true},{"type":"string","in":"query","name":"returnFields","description":"List of fields to return for each section","required":false}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/sections-search/above-capacity/{year}/{semester}":{"post":{"tags":["Sections"],"summary":"Search above-capacity sections","description":"Get sections above (room) capacity.\nUsed for `/reports?item=enrollment&tab=aboveCapacity` Front-End view.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"year","description":"Year for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"semester","description":"Semester for which we should count courses and sections.","required":true},{"type":"string","in":"query","name":"departments","description":"Which departments to check.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"in":"body","schema":{"properties":{"courseFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"sectionFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"roomFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"courseId":{"type":"string","description":""},"courseCode":{"type":"string","description":"Course's `code."},"sectionId":{"type":"string","description":""},"sectionNumber":{"type":"string","description":"Section's `sectionNumber`."},"callNumber":{"type":"string","description":"Section's `callNumber`."},"sectionType":{"type":"string","description":"Section's `sectionType`."},"enrollment":{"type":"number","description":"Section's `enrollment`."},"maxEnrollment":{"type":"number","description":"Section's `maxEnrollment`."},"timeIndex":{"type":"number","description":"Index of given `time` item in `section.times`."},"roomId":{"type":"string","description":"Given `time` item's `classroom`."},"roomDisplayName":{"type":"string","description":"Given `time` item classroom's `displayName`."},"capacity":{"type":"number","description":"Given `time` item classroom's `capacity`."}},"type":"object","required":["courseId","courseCode","sectionId","sectionNumber","callNumber","sectionType","enrollment","maxEnrollment","timeIndex","roomId","roomDisplayName","capacity"]}}}}},"/api/v1/{school}/sections-search/utilization/{year}/{semester}":{"post":{"tags":["Sections"],"summary":"Search sections by utilization","description":"Get sections with utilization class. It returns only sections that have both enrollment and maxEnrollment larget than 0.\nUsed for `/reports?item=enrollment&tab={utilization}` Front-End view.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"year","description":"Year for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"semester","description":"Semester for which we should count courses and sections.","required":true},{"type":"string","in":"query","name":"departments","description":"Which departments to check.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"type":"string","in":"query","name":"utilization","description":"Comma-separated list of utilization classes.\n                                                                                Available values: balanced, underfilled, overfilled","required":false},{"in":"body","schema":{"properties":{"courseFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"sectionFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/sections-search/zero-enrollment/{year}/{semester}":{"post":{"tags":["Sections"],"summary":"Search zero-enrollment sections","description":"Get sections with 'enrollment' being falsy value.\nUsed for `/reports?item=enrollment&tab=zeroEnrollment` Front-End view.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"year","description":"Year for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"semester","description":"Semester for which we should count courses and sections.","required":true},{"type":"string","in":"query","name":"departments","description":"Which departments to check.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"in":"body","schema":{"properties":{"courseFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"sectionFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"courseId":{"type":"string","description":""},"courseCode":{"type":"string","description":"Course's `code."},"sectionId":{"type":"string","description":""},"sectionNumber":{"type":"string","description":"Section's `sectionNumber`."},"callNumber":{"type":"string","description":"Section's `callNumber`."},"sectionType":{"type":"string","description":"Section's `sectionType`."},"maxEnrollment":{"type":"number","description":"Section's `maxEnrollment`."}},"type":"object","required":["courseId","courseCode","sectionId","sectionNumber","callNumber","sectionType","maxEnrollment"]}}}}},"/api/v1/{school}/sections-search/zero-max-enrollment/{year}/{semester}":{"post":{"tags":["Sections"],"summary":"Search zero-max-enrollment sections","description":"Get sections with 'maxEnrollment' being falsy value.\nUsed for `/reports?item=enrollment&tab=zeroMaxEnrollment` Front-End view.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"year","description":"Year for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"semester","description":"Semester for which we should count courses and sections.","required":true},{"type":"string","in":"query","name":"departments","description":"Which departments to check.","required":false},{"type":"string","in":"query","name":"skip","description":"Number of records that should be skipped.","required":false},{"type":"string","in":"query","name":"limit","description":"Number of records that should be returned.","required":false},{"in":"body","schema":{"properties":{"courseFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"sectionFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{"courseId":{"type":"string","description":""},"courseCode":{"type":"string","description":"Course's `code."},"sectionId":{"type":"string","description":""},"sectionNumber":{"type":"string","description":"Section's `sectionNumber`."},"callNumber":{"type":"string","description":"Section's `callNumber`."},"sectionType":{"type":"string","description":"Section's `sectionType`."}},"type":"object","required":["courseId","courseCode","sectionId","sectionNumber","callNumber","sectionType"]}}}}},"/api/v1/{school}/sections-search/heatmap/{year}/{semester}":{"post":{"tags":["Sections_(Meetings)"],"summary":"Search sections meetings utilization heatmap (by term)","description":"Get sections' meetings for given term, in a form of day-hour blocks,\nwith information of enrollment utilization for each block.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"year","description":"Year for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"semester","description":"Semester for which we should count courses and sections.","required":true},{"type":"string","in":"query","name":"departments","description":"Which departments to check.","required":false},{"in":"body","schema":{"properties":{"courseFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"sectionFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"roomFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/sections-search/heatmap/{year}/{semester}/{startDate}/{endDate}":{"post":{"tags":["Sections_(Meetings)"],"summary":"Search sections meetings utilization heatmap by dates.","description":"Get sections' meeting patterns for given date range,\nin a form of date-hour blocks, with information of utilization for each block.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"year","description":"Year for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"semester","description":"Semester for which we should count courses and sections.","required":true},{"type":"string","in":"path","name":"startDate","description":"When starts either meetingPattern, section, partOfTerm or term.","required":true},{"type":"string","in":"path","name":"endDate","description":"When ends either meetingPattern, section, partOfTerm or term.","required":true},{"type":"string","in":"query","name":"departments","description":"Which departments to check.","required":false},{"in":"body","schema":{"properties":{"courseFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"sectionFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]},"roomFilter":{"type":"object","properties":{"condition":{"type":"string","description":"Required only when filters param is sent.","default":"'and'"},"filters":{"type":"array","items":{"type":"object","properties":{},"required":[]}}},"required":[]}},"type":"object","required":[]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/users/reset-password":{"post":{"tags":["Users"],"summary":"POST Reset Password","description":"Reset password.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","schema":{"properties":{"email":{"type":"string","description":"User's email."}},"type":"object","required":["email"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/instructorLoadRequirements/{id}":{},"/api/v1/{school}/integration/mergeSettings/saveStates/":{"put":{"tags":["Integration_Save_States"],"summary":"Post Integration Save States","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID","required":true},{"type":"string","in":"query","name":"payload","description":"Integration save state to create","required":true},{"type":"string","in":"query","name":"payload[name]","description":"Name of the integration save state","required":true}],"responses":{"200":{"schema":{"properties":{"Created":{"type":"object","properties":{},"required":[]}},"type":"object","required":["Created"]}}}}},"/api/v1/{school}/integration/snapshot/{id}":{"put":{"tags":["Integration_Save_States"],"summary":"PUT Integration Save States","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID","required":true},{"type":"string","in":"path","name":"id","description":"Integration Save State ID.","required":true},{"type":"string","in":"query","name":"payload","description":"Key-values to update","required":true}],"responses":{"200":{"schema":{"properties":{"Updated":{"type":"object","properties":{},"required":[]}},"type":"object","required":["Updated"]}}}}},"/api/v1/{school}/relationships/{year}/{semester}/{relationshipId}":{"put":{"tags":["Relationships"],"summary":"Update relationship","description":"Update relationship","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School","required":true},{"type":"string","in":"path","name":"year","description":"Year","required":true},{"type":"string","in":"path","name":"semester","description":"Semester","required":true},{"type":"string","in":"path","name":"relationshipId","description":"Relationship id","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}},"delete":{"tags":["Relationships"],"summary":"Delete relationship","description":"Delete relationship","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School","required":true},{"type":"string","in":"path","name":"year","description":"Year","required":true},{"type":"string","in":"path","name":"semester","description":"Semester","required":true},{"type":"string","in":"path","name":"relationshipId","description":"Relationship id","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/algorithmRuns/{id}":{"put":{"tags":["Section_Optimizer"],"summary":"PUT section optimizer run","description":"Edit a section optimizer run object.","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"Unique school id.","required":true},{"type":"string","in":"path","name":"id","description":"Unique algorithm run id.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/general/{attribute}":{"put":{"tags":["Settings"],"summary":"PUT general","description":"Update attribute in general collection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","schema":{"properties":{"attribute":{"type":"string","description":"that needs to be updated"},":attribute":{"type":"object","properties":{},"required":[]}},"type":"object","required":["attribute"]},"name":"payload"}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}},"/api/v1/{school}/catalogs/{catalogId}":{},"/api/v1/{school}/formResponseV2/{formResponseId}":{"delete":{"tags":["Forms_V2_/_Responses"],"summary":"DELETE Form Response V2","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"formResponseId","description":"Form response unique ID.","required":true}],"responses":{"200":{"schema":{"properties":{"Empty":{"type":"object","properties":{},"required":[]}},"type":"object","required":["Empty"]}}}}},"/api/v1/sm/{school}/instructorLoadRequirements/{id}":{},"/api/v1/{school}/integration/mergeSettings/saveStates/{id}":{"delete":{"tags":["Integration_Save_States"],"summary":"DELETE Integration Save States","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"id","description":"Integration Save State unique ID to delete.","required":true}],"responses":{"200":{"schema":{"properties":{"The":{"type":"object","properties":{},"required":[]}},"type":"object","required":["The"]}}}}},"/api/v1/{school}/users/{userId}":{"delete":{"tags":["Users"],"summary":"DELETE User","description":"","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"string","in":"path","name":"school","description":"School unique ID.","required":true},{"type":"string","in":"path","name":"userId","description":"User unique ID (email).","required":true},{"type":"string","in":"query","name":"school","description":"School to remove user from.","required":true}],"responses":{"200":{"schema":{"properties":{},"type":"object","required":[]}}}}}},"tags":[{"name":"Crosslists","description":"(Description for crosslist)"},{"name":"Admin","description":"(Description for admin)"}]}